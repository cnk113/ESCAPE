% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute.knn.R
\name{impute.knn}
\alias{impute.knn}
\title{KNN imputation}
\usage{
impute.knn(input, dmat, sim.mat, k = 5, dprob = 0.5, sim.cut = 1e-04,
  seed = 2018)
}
\arguments{
\item{input}{raw count matrix, row is gene and col is cell}

\item{dmat}{matrix containing dropout probability}

\item{sim.mat}{cell-to-cell similarity matrix}

\item{k}{number of nearest neighbours used for imputation}

\item{dprob}{threshold to determine whether an observation 
is a dropout event. If observation >= dprob, 
it will be considered as a dropout. The default 
is 0.5.}

\item{sim.cut}{cut-point used to determine what is the cutoff 
for a trustable similarity. The cutoff is the 
"sim.cut"*100th quantile of all cell-to-cell 
similarities. Any cell having similarity greater 
than cutoff to a target cell will be considered 
to use in imputation.}

\item{seed}{seed to generate reproducible results}
}
\value{
a list containing imputation results:
\itemize{
  \item output.imp matrix containing imputed values
  \item num.imp number of observations imputed
}
}
\description{
Impute dropout events via KNN double weighted imputation
}
\examples{
data(zebrafish)

offsets <- as.numeric(log(colSums(zebrafish)))
count <- zebrafish[rowSums(zebrafish > 5) > 4, ]

# matrix of dropout probability
dp.mat <- prob.dropout(input = count, is.count = T, offsets = offsets, mcore = 3)

# similarity matrix
sim.mat <- sim.calc(log2(count+1), dp.mat)

# KNN imputation
impute.mat <- impute.knn(input = count, dmat = dp.mat, sim.mat = sim.mat, 
                         k = 6, sim.cut = 1e-4)

}
